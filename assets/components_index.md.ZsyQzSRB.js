import{_ as s,o as a,c as i,R as n}from"./chunks/framework.Lpe8OHoJ.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"components/index.md","filePath":"components/index.md","lastUpdated":1703132203000}'),e={name:"components/index.md"},l=n(`<h3 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>@yaoyaochi/weyui 基于 vue3 + ts + ArcoDesign 开发的高度定制化的组件库</p></div><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @yaoyaochi/weyui</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span></span></code></pre></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// main.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WeyUI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@yaoyaochi/weyui&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@yaoyaochi/weyui/style.css&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(App)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WeyUI)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="weyui组件库-volar-类型提示" tabindex="-1">WeyUI组件库 Volar 类型提示 <a class="header-anchor" href="#weyui组件库-volar-类型提示" aria-label="Permalink to &quot;WeyUI组件库 Volar 类型提示&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 需要在使用的项目的tsconfig.json文件中添加以下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compilerOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;types&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@yaoyaochi/weyui/components.d.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="docs文档结构目录" tabindex="-1">docs文档结构目录 <a class="header-anchor" href="#docs文档结构目录" aria-label="Permalink to &quot;docs文档结构目录&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>├─ examples               # Demo组件自动解析此文件夹下的所有.vue文件</span></span>
<span class="line"><span>├─ components             # .md文件</span></span>
<span class="line"><span>├─ public                 # 静态资源文件</span></span>
<span class="line"><span>├─ .vitepress</span></span>
<span class="line"><span>│  ├─ config              # 插件配置</span></span>
<span class="line"><span>|  │  ├─ global.ts        # 全局变量定义</span></span>
<span class="line"><span>|  │  └─ plugins.ts       # 自定义.md文件渲染</span></span>
<span class="line"><span>│  ├─ theme               # 主题配置</span></span>
<span class="line"><span>│  ├─ utils               # 文档展开隐藏代码高亮</span></span>
<span class="line"><span>│  ├─ vitepress</span></span>
<span class="line"><span>|  │  ├─ vp-demo          # Demo组件源码</span></span>
<span class="line"><span>|  │  ├─ style            # Demo组件样式</span></span>
<span class="line"><span>|  │  └─ index.ts         # 暴露Demo组件</span></span>
<span class="line"><span>│  └─ config.ts           # vitepress配置文件</span></span>
<span class="line"><span>├─ index.md               # 文档home页面</span></span>
<span class="line"><span>├─ tsconfig.json          # typescript 全局配置</span></span>
<span class="line"><span>└─ vite.config.ts         # vite 全局配置文件（支持tsx）</span></span></code></pre></div><h3 id="git-提交规范-pr提交规范" tabindex="-1">Git 提交规范（PR提交规范） <a class="header-anchor" href="#git-提交规范-pr提交规范" aria-label="Permalink to &quot;Git 提交规范（PR提交规范）&quot;">​</a></h3><ul><li><code>ci</code>: ci 配置文件和脚本的变动;</li><li><code>chore</code>: 构建系统或辅助工具的变动;</li><li><code>fix</code>: 代码 BUG 修复;</li><li><code>feat</code>: 新功能;</li><li><code>perf</code>: 性能优化和提升;</li><li><code>refactor</code>: 仅仅是代码变动，既不是修复 BUG 也不是引入新功能;</li><li><code>style</code>: 代码格式调整，可能是空格、分号、缩进等等;</li><li><code>docs</code>: 文档变动;</li><li><code>test</code>: 补充缺失的测试用例或者修正现有的测试用例;</li><li><code>revert</code>: 回滚操作;</li></ul><h3 id="关联项目推荐" tabindex="-1">关联项目推荐 <a class="header-anchor" href="#关联项目推荐" aria-label="Permalink to &quot;关联项目推荐&quot;">​</a></h3><ul><li><a href="https://github.com/ArtisanCloud/PowerX" target="_blank" rel="noreferrer">PowerX 一款以企业微信为基础的微信私域运营开放平台，帮助企业实现引流获客、精细运营。</a></li><li><a href="https://github.com/ArtisanCloud/PowerWeChat" target="_blank" rel="noreferrer">PowerWechat 一款基于WeChat SDK for Golang，支持小程序、微信支付、企业微信、公众号等全微信生态</a></li></ul>`,14),p=[l];function t(h,o,c,r,d,k){return a(),i("div",null,p)}const y=s(e,[["render",t]]);export{u as __pageData,y as default};
